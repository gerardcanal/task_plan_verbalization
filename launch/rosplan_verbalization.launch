<?xml version="1.0"?>
<launch>
	<arg name="domain_path"		default="$(find pddl_verbalization)/domains/office_robot/domain.pddl" />
	<arg name="problem_path"	default="$(find pddl_verbalization)/domains/office_robot/problem.pddl" />
	<arg name="narrator_name"	default="" />
	<arg name="print_actions"	default="false" />
	<arg name="evaluation"	 	default="false" />

	<!-- Include rosplan -->
	<include file="$(find pddl_verbalization)/launch/rosplan_full.launch">
		<arg name="domain_path"		 		value="$(arg domain_path)" />
		<arg name="problem_path" 			value="$(arg problem_path)" />
		<arg name="planning_language" 		value="PDDL" />
		<arg name="planner_topic" 			value="planner_output" />
		<arg name="data_path" 				value="/tmp/" />
		<arg name="generated_problem_path"	value="/tmp/gen_problem.pddl" />
		<arg name="dispatcher" 				value="esterel" /> <!-- Check to add the parser when needed -->
		<arg name="planner_command"      	value="timeout 120 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" if="$(eval evaluation == false)" />
		<arg name="planner_command"      	value="timeout 120 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" if="$(eval evaluation == true)"/>
		<arg name="planner_interface"    	value="popf_planner_interface" />
	</include>

  	<node name="rosplan_narrator" pkg="pddl_verbalization" type="pddl_verbalization_node.py" respawn="false" output="screen" required="$(eval evaluation == true)">
    	<param name="domain_path"   value="$(arg domain_path)" />
    	<param name="problem_path"  value="$(arg problem_path)" />
    	<param name="narrator_name" value="$(arg narrator_name)" />
    	<param name="print_actions" value="$(arg print_actions)" />
    	<param name="evaluation"    value="$(arg evaluation)" />
	</node>
</launch>